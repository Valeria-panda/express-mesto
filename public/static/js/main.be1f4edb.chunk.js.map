{"version":3,"sources":["utils/Api.js","utils/constant.js","images/headerlogo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_serverAnswer","newUserInfo","method","body","JSON","stringify","name","about","avatar","data","link","cardId","isLiked","authorization","Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","onClick","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","Footer","ImagePopup","isOpen","onClose","PopupWithForm","formName","formId","title","children","submitButtonText","onSubmit","isLoading","id","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","evt","preventDefault","current","value","htmlFor","ref","required","placeholder","EditProfilePopup","props","onUpdateUser","useState","setName","description","setDescription","useEffect","target","minLength","maxLength","autoComplete","onChange","AddPlacePopup","setLink","ConfirmPopup","onConfirmDelete","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmPopupOpen","setConfirmPopupOpen","setCards","isImageOpen","selectedCard","setSelectedCard","setCurrentUser","cardToDelete","setCardToDelete","setLoading","closeAllPopups","getUserInfo","currentUserInfoData","catch","err","console","log","getInitialCards","cardData","Provider","changeLikeCardStatus","newCard","newCards","c","userData","updateUserInfo","newUser","finally","newAvatar","setUserAvatar","postNewCard","deleteCard","filter","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be1f4edb.chunk.js","sourcesContent":["import {options} from './constant.js'\r\n\r\n\r\nclass Api {\r\n    constructor(options) {\r\n      this._baseUrl = options.baseUrl;\r\n      this._headers = options.headers;\r\n    }\r\n\r\n    //проверяем ответ сервера\r\n    _serverAnswer(res){\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    \r\n    //подгружаем с сервера данные карточек\r\n    getInitialCards() {\r\n      return fetch(`${this._baseUrl}/cards`, {\r\n        headers: this._headers,\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n\r\n    //подгружаем информацию о пользователе с сервера\r\n    getUserInfo() {\r\n      return fetch(`${this._baseUrl}/users/me`, {\r\n        headers: this._headers,\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n\r\n    //загружаем на сервер информацию о пользователе, отредактированную\r\n    updateUserInfo(newUserInfo) {\r\n      return fetch(`${this._baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n          name: newUserInfo.name,\r\n          about: newUserInfo.about,\r\n        }),\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n  \r\n    //обновление аватара\r\n    setUserAvatar(avatar) {\r\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({ avatar: avatar.avatar }),\r\n        headers: this._headers,\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n  \r\n    //добавление новой карты\r\n    postNewCard(data) {\r\n      return fetch(`${this._baseUrl}/cards`, {\r\n        headers: this._headers,\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          name: data.name,\r\n          link: data.link,\r\n        }),\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n    \r\n    //удаление карточки \r\n    deleteCard(cardId) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n        headers: this._headers,\r\n        method: \"DELETE\",\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n\r\n    //постановка лайка\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n      return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n        method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n        headers: this._headers,\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n\r\n    //снятие лайка\r\n    deleteLike(cardId) {\r\n      return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      })\r\n      .then(this._serverAnswer)\r\n    }\r\n\r\n  }\r\n\r\n  export const api = new Api(options);","\r\nexport const options = {\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-16\",\r\n  headers: {\r\n      authorization: \"3b2fde55-52e7-4322-8de5-f90b53e04551\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/headerlogo.c2821b38.svg\";","import React from 'react';\r\nimport headerLogo from '../images/headerlogo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header section\">\r\n     <img className=\"header__logo-image\" src={headerLogo} alt=\"логотип сайта\"/>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n\r\n\r\nfunction handleClick() {\r\n    onCardClick(card);\r\n}\r\n   const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n    `elements__delete ${isOwn ? 'elements__delete_visible' : 'elements__delete'}`\r\n    ); \r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    const cardLikeButtonClassName = `elements__text-like ${\r\n      isLiked && 'elements__text-like_active'\r\n    }`;\r\n\r\n      function handleLikeClick() {\r\n        onCardLike(card);\r\n      }\r\n    \r\n      function handleDeleteClick() {\r\n        onCardDelete(card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"elements__item\">\r\n            <img className=\"elements__item-img\" src={card.link}\r\n                alt={card.name}\r\n                onClick={handleClick}/>\r\n            <button type=\"button\" \r\n            className={cardDeleteButtonClassName}\r\n            onClick={handleDeleteClick} >\r\n            </button>\r\n            <div className=\"elements__text\">\r\n            <h3 className=\"elements__text-title\">{card.name}</h3>\r\n            <div className=\"elements__text_count\">\r\n            <button type=\"button\"  \r\n            className={cardLikeButtonClassName}\r\n            onClick={handleLikeClick} >\r\n          </button>\r\n            <div className=\"elements__text-likecounter\">{card.likes.length}</div>\r\n            </div>\r\n            </div>\r\n        </li>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main({ onEditAvatar,onEditProfile,onAddPlace,cards,onCardClick, onCardDelete, onCardLike}){\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <div className=\"content section\">\r\n        <section className=\"profile section\">\r\n          <div className=\"profile__section\">\r\n            <div className=\"profile__avatar\">\r\n              <img className=\"profile__avatarimage\"\r\n                    alt='Аватар профиля'\r\n                    src={currentUser.avatar}\r\n                    />\r\n              <div className=\"profile__cover\">\r\n                <button type=\"button\" className=\"profile__avatarbutton\" onClick={onEditAvatar}></button>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile__intro\">\r\n              <div className=\"intro\">\r\n              <h1 className=\"intro__title\">{currentUser.name}</h1>\r\n                <p className=\"intro__subtitle\">{currentUser.about}</p>\r\n              </div>\r\n              <button type=\"button\" className=\"profile__edit-button\" onClick={onEditProfile}></button>\r\n            </div>\r\n          </div>\r\n          <button type=\"button\" className=\"profile__button\" onClick={onAddPlace}></button>\r\n        </section>\r\n        <ul className=\"elements__list\">\r\n         {cards.map((card) => (\r\n        <Card\r\n          key={card._id}\r\n          card={card}\r\n          onCardClick={onCardClick}\r\n          onCardLike={onCardLike}\r\n          onCardDelete={onCardDelete}\r\n        />\r\n      ))}\r\n       </ul>\r\n      </div>\r\n    )\r\n}\r\nexport default Main;\r\n\r\n","import React from 'react';\r\n\r\nfunction Footer(){\r\n    return (\r\n    <footer className=\"footer section\">\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","\r\nimport React from 'react';\r\n\r\nfunction ImagePopup({isOpen, onClose, link, name}) {\r\n  return (\r\n    <div className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__background popup__background_photo\"></div>\r\n        <div className=\"popup__photo-container\">\r\n          <button type=\"reset\" className=\"popup__button\" onClick={onClose}></button>\r\n            <img className=\"popup__image\" src={link} alt={name}/>\r\n            <h2 className=\"popup__title popup__title_photo\">{name}</h2>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm({isOpen,onClose,formName,formId,title,children,submitButtonText, onSubmit, isLoading}){\r\n    return(\r\n         <section className={`popup ${isOpen && 'popup_opened'}`}>\r\n          <div className=\"popup__background\"></div>\r\n          <form onSubmit={onSubmit} className={`popup__form popup__form_type_${formName}`} name={formName} id={formId}>\r\n            <button type=\"reset\" className=\"popup__button\" onClick={onClose}></button>\r\n            <h2 className=\"popup__title\">{title}</h2>\r\n            <button type=\"submit\" className={`popup__submit ${\r\n            isLoading && 'popup__submit'\r\n          }`} \r\n          >{isLoading ? `Сохранение...` : submitButtonText}</button>\r\n            {children}\r\n          </form>\r\n      </section>\r\n    )\r\n\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useRef} from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, isLoading }) {\r\n\r\n  const inputRef = useRef('');\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateAvatar({ avatar: inputRef.current.value });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='popup'\r\n      formId = 'popup-editavatar-form'\r\n      title='Обновить аватар'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n     <label htmlFor='avatar' className=\"popup__input-label\">\r\n          <input \r\n            ref={inputRef}\r\n            type='url'\r\n            name=\"avatar\" \r\n            className=\"popup__input popup__input_avatar\" \r\n            required \r\n            placeholder=\"Ссылка на аватар\"\r\n          />\r\n          <span className='popup__input-error' id=\"avatar-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const {isOpen, onClose, onUpdateUser, isLoading } = props\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleChangeName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n  }\r\n  function handleChangeDescription(evt) {\r\n    if(evt.target.name === 'about')\r\n      setDescription(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        formName='popup'\r\n        formId = 'popup-edit-form'\r\n        title='Редактировать профиль'\r\n        submitButtonText='Сохранить'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}  \r\n      >\r\n        <label htmlFor='name' className=\"popup__input-label\">\r\n        <input  \r\n          name=\"name\"\r\n          type='text'\r\n          value={name || ''}\r\n          className=\"popup__input popup__input_name\" \r\n          type=\"text\" \r\n          required \r\n          pattern='[А-Яа-яA-Za-z -]{1,}'\r\n          placeholder=\"Введите имя\" \r\n          minLength =\"2\" \r\n          maxLength =\"40\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeName}\r\n        />\r\n        <span className='popup__input-error' id=\"name-error\"></span>\r\n        </label>\r\n        <label htmlFor='about' className=\"popup__input-label\">\r\n        <input \r\n          type='text'\r\n          name=\"about\" \r\n          className=\"popup__input popup__input_job\" \r\n          value={description || ''}\r\n          required \r\n          placeholder=\"Чем вы занимаетесь?\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\" \r\n          autoComplete=\"off\"\r\n          onChange={handleChangeDescription}\r\n        />\r\n        <span className='popup__input-error' id=\"about-error\"></span>\r\n        </label>\r\n        </PopupWithForm>\r\n    );\r\n  }\r\nexport default EditProfilePopup;","import React, { useState }  from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\n\r\n\r\nfunction AddPlacePopup({isOpen,onClose, onAddPlace, isLoading }) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n  \r\n  React.useEffect(() => {\r\n    setName('');\r\n    setLink('');\r\n  }, [isOpen]);\r\n\r\n  function handleChangeCardName(evt) {\r\n    if(evt.target.name === 'name')\r\n      setName(evt.target.value)\r\n      // : setLink(evt.target.value);\r\n  }\r\n  function handleChangeCardLink(evt) {\r\n    if(evt.target.name === 'link')\r\n      // ? setName(evt.target.value)\r\n      setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      formName='popup'\r\n      formId = 'popup-addCard'\r\n      title='Новое место'\r\n      submitButtonText='Сохранить'\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      isLoading={isLoading}\r\n    >\r\n      <label htmlFor='name' className=\"popup__input-label\">\r\n            <input \r\n            id='name'\r\n            name='name'\r\n            value={name || ''}\r\n            placeholder='Название'\r\n            minLength='1'\r\n            maxLength='30'\r\n            required\r\n            onChange={handleChangeCardName}\r\n            className=\"popup__input popup__input_name\"\r\n            type=\"text\" \r\n            autoComplete=\"off\"\r\n             />\r\n            <span className='popup__input-error' \r\n            \r\n          id='name-error' id=\"name-error\"></span>\r\n        </label>\r\n        <label htmlFor='link' className=\"popup__input-label\">   \r\n          <input \r\n          type='url'\r\n          id='link'\r\n          name='link'\r\n          value={link || ''}\r\n          placeholder='Ссылка на картинку'\r\n          required\r\n          onChange={handleChangeCardLink}\r\n          className=\"popup__input popup__input_link\" \r\n          autoComplete=\"off\" \r\n          minLength =\"2\" \r\n          maxLength =\"200\"/>\r\n          <span className='popup__input-error' id=\"link-error\"></span>\r\n        </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmPopup({isOpen, onClose, onConfirmDelete, isLoading}) {\r\n  \r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onConfirmDelete();\r\n  }\r\n\r\n    return (\r\n      <PopupWithForm\r\n        formName='popup'\r\n        formId = 'popup-deleteCards'\r\n        title='Вы уверенны?'\r\n        submitButtonText='Да'\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}\r\n      ></PopupWithForm>\r\n    );\r\n  }\r\nexport default ConfirmPopup;","\r\nimport React, { useState }  from 'react';\r\nimport '../index.css';\r\nimport { api } from '../utils/Api.js';\r\nimport Header from '../components/Header.js';\r\nimport Main from '../components/Main.js';\r\nimport Footer from '../components/Footer.js';\r\nimport ImagePopup from '../components/ImagePopup.js';\r\nimport EditAvatarPopup from '../components/EditAvatarPopup.js';\r\nimport EditProfilePopup from '../components/EditProfilePopup.js';\r\nimport AddPlacePopup from '../components/AddPlacePopup.js';\r\nimport ConfirmPopup from './ConfirmPopup.js';\r\nimport { CurrentUserContext }  from '../contexts/CurrentUserContext.js'\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isImageOpen: false,\r\n    link: '',\r\n    name: '',\r\n  });\r\n\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [cardToDelete, setCardToDelete] = useState({});\r\n  const [isLoading, setLoading] = useState(false);\r\n  //данные о текущем пользователе\r\n  React.useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((currentUserInfoData) => {\r\n        setCurrentUser(currentUserInfoData);\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Ошибка при загрузке информации о пользователе: ${err}`)\r\n      );\r\n  }, []);\r\n\r\n  //Открыть попап аватара\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n  //Открыть попап профииля\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n  //Открыть попап карточки\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n  // открыть фулсайз фото\r\n  function handleCardClick(card) {\r\n    const { link, name } = card;\r\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n      // Обновляем стейт\r\n      setCards(newCards);\r\n    })\r\n    .catch((err) =>\r\n        console.log(`Ошибка при постановке лайка: ${err}`)\r\n    );\r\n  } \r\n\r\n   //Удалить карточку после подтверждения\r\n   function handleConfirm() {\r\n    api\r\n      .deleteCard(cardToDelete._id)\r\n      .then(() =>{\r\n        setCards(cards.filter((item) => item !== cardToDelete))\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(`Ошибка при удалении карточки: ${err}`));\r\n    \r\n  }\r\n\r\n  //Кликнуть на удаление карточки\r\n  function handleCardDelete(card) {\r\n    setConfirmPopupOpen(true);\r\n    setCardToDelete(card);\r\n  }\r\n\r\n\r\n  //Закрыть все попапы\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n    setConfirmPopupOpen(false);\r\n  }\r\n\r\n    //Обновить аватар\r\n    function handleUpdateAvatar(newAvatar) {\r\n      setLoading(true);\r\n      api\r\n        .setUserAvatar(newAvatar)\r\n        .then((res) => {\r\n          setCurrentUser(res);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => console.log(`Ошибка при обновлении аватара: ${err}`))\r\n        .finally(() => setLoading(false));\r\n        \r\n    }\r\n\r\n    //Обновить данные пользователя\r\n    function handleUpdateUser(userData) {\r\n      setLoading(true);\r\n      api\r\n        .updateUserInfo(userData)\r\n        .then((newUser) => {\r\n          setCurrentUser(newUser);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => `Ошибка при обновлении информации о пользователе: ${err}`)\r\n        .finally(() => setLoading(false));\r\n      \r\n    }\r\n\r\n    //Получить данные карточек с фото\r\n    React.useEffect(() => {\r\n      api\r\n        .getInitialCards()\r\n        .then((cardData) => {\r\n          setCards(cardData);\r\n        })\r\n        .catch((err) => console.log(`Ошибка при загрузке карточек: ${err}`));\r\n    }, []);\r\n  \r\n    function handleAddPlace(card) {\r\n      setLoading(true);\r\n      api\r\n        .postNewCard(card)\r\n        .then((newCard) => setCards([newCard, ...cards]))\r\n        .catch((err) =>\r\n          console.log(`Ошибка при добавлении новой карточки: ${err}`)\r\n        )\r\n        .finally(() => setLoading(false));\r\n      closeAllPopups();\r\n    }\r\n    \r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"root\">\r\n          <div className=\"page\">\r\n            <Header />\r\n            <Main  \r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                cards={cards}\r\n                onCardClick={handleCardClick}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete} \r\n            />\r\n            <EditProfilePopup\r\n              isOpen={isEditProfilePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onUpdateUser={handleUpdateUser}\r\n              isLoading={isLoading}\r\n            />\r\n            <EditAvatarPopup\r\n              onUpdateAvatar={handleUpdateAvatar}\r\n              isOpen={isEditAvatarPopupOpen}\r\n              onClose={closeAllPopups}\r\n              isLoading={isLoading}\r\n            />\r\n            <AddPlacePopup\r\n              isOpen={isAddPlacePopupOpen}\r\n              onClose={closeAllPopups}\r\n              onAddPlace={handleAddPlace}\r\n            />\r\n\r\n            <ConfirmPopup\r\n              isOpen={isConfirmPopupOpen}\r\n              onClose={closeAllPopups}\r\n              onConfirmDelete={handleConfirm}\r\n            />\r\n          \r\n            <ImagePopup \r\n            name={selectedCard.name}\r\n            link={selectedCard.link}\r\n            isOpen={selectedCard.isImageOpen}\r\n            onClose={closeAllPopups}\r\n            />\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}